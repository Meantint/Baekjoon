<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BOJ_1043 on Meantint&#39;s BLog</title>
    <link>https://meantint.github.io/tags/boj_1043/</link>
    <description>Recent content in BOJ_1043 on Meantint&#39;s BLog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <lastBuildDate>Fri, 17 Jul 2020 16:05:00 +0900</lastBuildDate>
    
	<atom:link href="https://meantint.github.io/tags/boj_1043/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BOJ 1043 - 거짓말</title>
      <link>https://meantint.github.io/2020/07/boj-1043-%EA%B1%B0%EC%A7%93%EB%A7%90/</link>
      <pubDate>Fri, 17 Jul 2020 16:05:00 +0900</pubDate>
      
      <guid>https://meantint.github.io/2020/07/boj-1043-%EA%B1%B0%EC%A7%93%EB%A7%90/</guid>
      <description>[BOJ_1043 - 거짓말]
 2차원 배열을 만들어서 진실을 아는 사람과 파티로 연결된 사람들을 모두 제거하는 방식으로 문제를 풀었는데, 다른 사람들의 대부분은 Union_Find를 이용하여 풀었더라. Union_Find를 공부하자.
풀이     사람 -&amp;gt; 1 2 3 4     파티 ↓        1  1 1 0 0   2  0 0 1 0   3  0 1 1 1    파티, 사람간의 관계를 갖는 2차원 배열  만약 진실을 알고 있는 사람이 있다면, 그 사람이 들어간 파티 번호를 찾은 후, 2차원 배열에서 가로 세로로 이어진 모든 연결(value가 1인 값들의 연결)을 제거한다.</description>
    </item>
    
  </channel>
</rss>