<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>BOJ_2169 on Meantint&#39;s BLog</title>
    <link>https://meantint.github.io/tags/boj_2169/</link>
    <description>Recent content in BOJ_2169 on Meantint&#39;s BLog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Wed, 19 Aug 2020 13:42:25 +0900</lastBuildDate>
    
	<atom:link href="https://meantint.github.io/tags/boj_2169/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>BOJ 2169 - 로봇 조종하기</title>
      <link>https://meantint.github.io/posts/2020/08/boj_2169/</link>
      <pubDate>Wed, 19 Aug 2020 13:42:25 +0900</pubDate>
      
      <guid>https://meantint.github.io/posts/2020/08/boj_2169/</guid>
      <description>[BOJ_2169 - 로봇 조종하기]
 정말 많이 생각하고 힘들게 풀었다. 원래 푼 방식이 맞다고 생각이 들어서 고집을 부렸는데 그 방법은 아니었다.
풀이   dp[i][j][k] = k 방향으로 들어와서 (i, j)에 들어왔을 때의 최댓값
  3가지 경우가 있다.
  왼쪽에서 들어왔을 때
 ret = max(dfs(x, y + 1, 0), dfs(x + 1, y, 2)) 실행    오른쪽에서 들어왔을 때:
 ret = max(dfs(x, y - 1, 1), dfs(x + 1, y, 2)) 실행    위쪽에서 들어왔을 때:</description>
    </item>
    
  </channel>
</rss>